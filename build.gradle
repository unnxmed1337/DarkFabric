plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.fabricmc.net/' }
        maven { url 'https://repo.viaversion.com/' }
    }
}

configurations {
    shade.transitive = false
}

dependencies {
    shade("org.reflections:reflections:0.9.12") {
        transitive = false
    }
    shade("net.jodah:typetools:0.6.2") {
        transitive = false
    }
    shade("com.github.Carleslc.Simple-YAML:Simple-Yaml:1.7.2") {
        transitive = false
    }
    shade("org.javassist:javassist:3.27.0-GA") {
        transitive = false
    }

    implementation "org.reflections:reflections:0.9.12"
    implementation "net.jodah:typetools:0.6.2"
    implementation "com.github.Carleslc.Simple-YAML:Simple-Yaml:1.7.2"

    compileOnly 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    compileOnly 'org.jetbrains:annotations:20.1.0'
    annotationProcessor 'org.jetbrains:annotations:20.1.0'

    testCompileOnly 'org.jetbrains:annotations:20.1.0'
    testAnnotationProcessor 'org.jetbrains:annotations:20.1.0'

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings minecraft.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "io.github.prospector:modmenu:1.14.13+build.22"
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion as Property<Integer>
    }
}

shadowJar {
    configurations = [project.configurations.shade]
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

}
tasks.remapJar.dependsOn(shadowJar)
(tasks.remapJar.input as FileSystemLocationProperty<? extends FileSystemLocation>).set(shadowJar.archivePath)